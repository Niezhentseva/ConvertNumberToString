package academy;

import com.tngtech.java.junit.dataprovider.DataProvider;
import com.tngtech.java.junit.dataprovider.DataProviderRunner;
import com.tngtech.java.junit.dataprovider.UseDataProvider;
import org.junit.After;
import org.junit.Test;
import org.junit.runner.RunWith;

import static org.junit.Assert.assertEquals;

@RunWith(DataProviderRunner.class)
public class NumberToStringTest {
    NumberToString numberToString;

    @DataProvider
    public static Object[][] dataForConverter() {
        return new Object[][]{
                {0, "ноль"},
                {-12, "минус двенадцать"},
                {49, "сорок девять"},
                {133, "сто тридцать три"},
                {-581, "минус пятьсот восемьдесят один"},
                {1222, "одна тысяча двести двадцать два"},
                {-6795, "минус шесть тысяч семьсот девяносто пять"},
                {46800, "сорок шесть тысяч восемьсот"},
                {-78456, "минус семьдесят восемь тысяч четыреста пятьдесят шесть"},
                {856_432, "восемьсот пятьдесят шесть тысяч четыреста тридцать два"},
                {-543_984, "минус пятьсот сорок три тысячи девятьсот восемьдесят четыре"},
                {-1_456_789, "минус один миллион четыреста пятьдесят шесть тысяч " +
                        "семьсот восемьдесят девять"},
                {8_000_001, "восемь миллионов один"},
                {12_222_236, "двенадцать миллионов двести двадцать две тысячи двести " +
                        "тридцать шесть"},
                {33_764_284, "тридцать три миллиона семьсот шестьдесят " +
                        "четыре тысячи двести восемьдесят четыре"},
                {-87_009_666, "минус восемьдесят семь миллионов девять тысяч" +
                        " шестьсот шестьдесят шесть"},
                {122_222_222, "сто двадцать два миллиона двести двадцать две тысячи " +
                        "двести двадцать два"},
                {-999_999_999, "минус девятьсот девяносто девять миллионов девятьсот " +
                        "девяносто девять тысяч девятьсот девяносто девять"},
                {69_969_969_969L,"шестьдесят девять миллиардов девятьсот шестьдесят " +
                        "девять миллионов девятьсот шестьдесят девять тысяч девятьсот " +
                        "шестьдесят девять"},
                {-12_175_864_003L, "минус двенадцать миллиардов сто семьдесят пять " +
                        "миллионов восемьсот шестьдесят четыре тысячи три"},
                {214_100_256_111L,"двести четырнадцать миллиардов сто миллионов двести" +
                        " пятьдесят шесть тысяч сто одиннадцать"},
                {-101_202_303_404L,
                        "минус сто один миллиард двести два миллиона триста три тысячи " +
                                "четыреста четыре"},
                {999_999_999_999L,"девятьсот девяносто девять миллиардов"
                                + " девятьсот девяносто девять миллионов девятьсот"
                                + " девяносто девять тысяч девятьсот девяносто девять"},
                {1_000_000_000_000L, "This number is not supported"},
                {-9_223_372_036_854_775_807L, "This number is not supported"},
        };
    }
    @After
    public void tearDown() {
        numberToString = null;
    }
    @Test
    @UseDataProvider("dataForConverter")
    public void getNumberToStringTest(long number, String expected) {
        numberToString = new NumberToString(number);
        String actual = numberToString.getNumberToString();
        assertEquals(expected,actual);
    }
}